@page
@model IndexModel
@{
    ViewData["Title"] = "Home page";
}

<div class="container-fluid">
    <div class="row">

        <!-- Main content (products, etc.) -->
        <div class="col-md-9 col-lg-10 offset-md-3 offset-lg-2 p-4">

            <div class="row">
                <input type="text" id="searchBox" class="form-control mb-4" placeholder="Search parts..." />
                @foreach (var part in Model.Parts)
                {
                    <div class="col-md-4 mb-4">
                        <div class="card h-80 d-flex flex-column">
                            <img class="card-img-top img-fluid" src="@part.ImageURL" alt="Card image cap" style="height: 200px; object-fit: cover;">
                            <div class="card-body d-flex flex-column">
                                <h5 class="card-title">@part.Name</h5>
                                <p class="card-text flex-grow-1">@part.Description</p>
                                <div class="d-flex align-items-center">
                                    <input type="number" class="form-control w-auto me-2" min="1" value="1"/>
                                    <a href="#" class="btn btn-primary">Buy</a>
                                </div>
                            </div>
                        </div>
                    </div>
                }
            </div>
        </div>
    </div>
</div>

<script>
    document.getElementById('searchBox').addEventListener('input', function () {
        const searchTerm = this.value.toLowerCase();
        const cards = document.querySelectorAll('.card');

        cards.forEach(card => {
            const title = card.querySelector('.card-title').textContent.toLowerCase();
            const description = card.querySelector('.card-text').textContent.toLowerCase();

            const matches = title.includes(searchTerm) || description.includes(searchTerm);
            card.parentElement.style.display = matches ? 'block' : 'none';
        });
    });
</script>